<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:p="http://www.springframework.org/schema/p" 
	xmlns:batch="http://www.springframework.org/schema/batch" 
	xmlns:task="http://www.springframework.org/schema/task" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
						http://www.springframework.org/schema/batch
						http://www.springframework.org/schema/batch/spring-batch-2.2.xsd
						http://www.springframework.org/schema/task
				        http://www.springframework.org/schema/task/spring-task-3.1.xsd">    
	
	
	<!-- Job Repository -->		
	<bean id="jobRepository" class="org.springframework.batch.core.repository.support.MapJobRepositoryFactoryBean">
		<property name="transactionManager" ref="jobRepositoryTransactionManager" />
	</bean>
	
	<bean id="jobRepositoryTransactionManager" class="org.springframework.batch.support.transaction.ResourcelessTransactionManager" />

	<!-- Job Louncher -->
	<bean id="jobLauncher" class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
		<property name="jobRepository" ref="jobRepository" />
	</bean>

	
	<!-- JOB 1 : Evaluate all expressions with status not evaluated yet -->
	<batch:job id="expressionsEvaluatingProcessor">
		
		<!-- Step 1 : Evaluating and save all expressions -->
		<batch:step id="expressionsEvaluating" next="expressionsNotification">
			
			<batch:tasklet>
			
				<batch:chunk reader="expressionsReader" 
							 processor="expressionsProcessor"
					   		 writer="expressionsWriter" 
					   		 commit-interval="1" />
					   		 
			</batch:tasklet>
			
		</batch:step>
		
		<!-- Step 2 : Send a notification for each evaluated expression -->
		<batch:step id="expressionsNotification">
			
			<batch:tasklet ref="notificationSender" />
			
		</batch:step>
		
	</batch:job>
	
		
	<!-- JOB: Step 1 (expressionsEvaluating) Beans -->
	
	<bean id="expressionsReader" class="br.usp.ime.escience.expressmatch.batch.expression.evaluate.reader.ExpressionsReader">
		 <property name="expressionStatus" value="EXPRESSION_TRANSCRIBED" />
	</bean>
	
	<bean id="expressionsProcessor" class="br.usp.ime.escience.expressmatch.batch.expression.evaluate.processor.ExpressionsProcessor">
	</bean>
	
	<bean id="expressionsWriter" class="br.usp.ime.escience.expressmatch.batch.expression.evaluate.writer.ExpressionsWriter">
	</bean>
	
		
	<!-- JOB 1: Step 2 (expressionsNotification) Beans -->
		
	<bean id="notificationSender" class="br.usp.ime.escience.expressmatch.batch.general.notification.NotificationSender">
	</bean>
	
	<!-- JOB 1 - End of definitions -->
	
	
	<!-- JOB 2 : Evaluate all expressions with status validated for evaluation purpose -->
	<batch:job id="expressionsEvaluatingResultsProcessor">
		
		<!-- Step 1 : Evaluating and save all expressions -->
		<batch:step id="expressionsEvaluatingResults" next="expressionsNotificationResults">
			
			<batch:tasklet>
			
				<batch:chunk reader="expressionsResultReader" 
							 processor="expressionsResultProcessor"
					   		 writer="expressionsResultWriter" 
					   		 commit-interval="1" />
					   		 
			</batch:tasklet>
			
		</batch:step>
		
		<!-- Step 2 : Send a notification for each evaluated expression -->
		<batch:step id="expressionsNotificationResults">
			
			<batch:tasklet ref="notificationSender" />
			
		</batch:step>
		
	</batch:job>
	
		
	<!-- JOB 2: Step 1 (expressionsResultingEvaluating) Beans -->
	
	<bean id="expressionsResultReader" class="br.usp.ime.escience.expressmatch.batch.expression.evaluate.reader.ExpressionsReader">
		<property name="expressionStatus" value="EXPRESSION_VALIDATED" />
	</bean>
	
	<bean id="expressionsResultProcessor" class="br.usp.ime.escience.expressmatch.batch.expression.evaluate.processor.ExpressionsProcessor">
	</bean>
	
	<bean id="expressionsResultWriter" class="br.usp.ime.escience.expressmatch.batch.expression.evaluate.writer.ExpressionsWriter">
	</bean>
	
	
	<!-- JOB 2 - End of definitions -->
	
	<!-- JOB 3 : Calculates mean and standard Deviation for each class of symbol -->
	<batch:job id="symbolClassifierMeansProcessor">
		
		<!-- Step 1 : Evaluating and save all expressions -->
		<batch:step id="symbolClassClassifyingResults" next="symbolClassClassifyingNotificationResults">
			
			<batch:tasklet>
			
				<batch:chunk reader="symboClassResultsReader" 
							 processor="symboClassResultsProcessor"
					   		 writer="symboClassResultsWriter" 
					   		 commit-interval="1" />
					   		 
			</batch:tasklet>
			
		</batch:step>
		
		<!-- Step 2 : Send a notification for each evaluated expression -->
		<batch:step id="symbolClassClassifyingNotificationResults">
			
			<batch:tasklet ref="notificationSender" />
			
		</batch:step>
		
	</batch:job>
	
		
	<!-- JOB 3: Step 1 (symbolClassClassifyingResults) Beans -->
	
	<bean id="symboClassResultsReader" class="br.usp.ime.escience.expressmatch.batch.symbol.classifying.reader.SymboClassResultsReader">
	</bean>
	
	<bean id="symboClassResultsProcessor" class="br.usp.ime.escience.expressmatch.batch.symbol.classifying.processor.SymboClassResultsProcessor">
	</bean>
	
	<bean id="symboClassResultsWriter" class="br.usp.ime.escience.expressmatch.batch.symbol.classifying.writer.SymboClassResultsWriter">
	</bean>
	
	<!-- JOB 3 - End of definitions -->
	
	<!-- END - JOB Definitions -->
	
	
	
	<!-- Task Scheduling Definitions-->
	
	<!-- Task Scheduler Runner for expressionsEvaluatingProcessor -->
	<bean id="expressionsEvaluatingTaskRunner" class="br.usp.ime.escience.expressmatch.batch.general.TaskRunner">
		<property name="job" ref="expressionsEvaluatingProcessor" />
	</bean>
	
	<!-- Task Scheduler Runner for expressionsEvaluatingResultsProcessor -->
	<bean id="expressionsEvaluatingResultsTaskRunner" class="br.usp.ime.escience.expressmatch.batch.general.TaskRunner">
		<property name="job" ref="expressionsEvaluatingResultsProcessor" />
	</bean>
	
	<!-- Task Scheduler Runner for symbolClassifierMeansProcessor  -->
	<bean id="symbolClassifierMeansTaskRunner" class="br.usp.ime.escience.expressmatch.batch.general.TaskRunner">
		<property name="job" ref="symbolClassifierMeansProcessor" />
	</bean>
 
	<!-- 
		minute hour day-of-month month day-of-week 
		cron="00 00 */10 * * *" 
	-->	
		
	<!-- Run every 10 days -->
	<task:scheduled-tasks>
		<task:scheduled ref="expressionsEvaluatingTaskRunner" method="run" cron="00 00 */10 * * *" />
	</task:scheduled-tasks>
	
	<!-- Run every 30 days -->
	<task:scheduled-tasks>
		<task:scheduled ref="symbolClassifierMeansTaskRunner" method="run" cron="00 00 */30 * * *" />
	</task:scheduled-tasks>
	
	
</beans>
