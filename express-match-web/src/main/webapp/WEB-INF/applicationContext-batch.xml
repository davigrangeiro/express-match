<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:p="http://www.springframework.org/schema/p" 
	xmlns:batch="http://www.springframework.org/schema/batch" 
	xmlns:task="http://www.springframework.org/schema/task" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
						http://www.springframework.org/schema/batch
						http://www.springframework.org/schema/batch/spring-batch-2.2.xsd
						http://www.springframework.org/schema/task
				        http://www.springframework.org/schema/task/spring-task-3.1.xsd">    
	
	
	<!-- Job Repository -->		
	<bean id="jobRepository" class="org.springframework.batch.core.repository.support.MapJobRepositoryFactoryBean">
		<property name="transactionManager" ref="transactionManager" />
		<property name="isolationLevelForCreate" value="ISOLATION_DEFAULT"/>
	</bean>

	<!-- Job Louncher -->
	<bean id="jobLauncher" class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
		<property name="jobRepository" ref="jobRepository" />
	</bean>


	<!-- JOB 1 : Evaluate all expressions with status not evaluated yet -->
	<batch:job id="expressionsEvaluatingProcessor">
		
		<!-- Step 1 : Evaluating and save all expressions -->
		<batch:step id="expressionsEvaluating" next="expressionsNotification">
			
			<batch:tasklet>
			
				<batch:chunk reader="expressionsReader" 
							 processor="expressionsProcessor"
					   		 writer="expressionsWriter" 
					   		 commit-interval="10" />
					   		 
			</batch:tasklet>
			
		</batch:step>
		
		<!-- Step 2 : Send a notification for each evaluated expression -->
		<batch:step id="expressionsNotification">
			
			<batch:tasklet ref="expressionsNotificationSender" />
			
		</batch:step>
		
	</batch:job>
	
		
	<!-- JOB: Step 1 (expressionsEvaluating) Beans -->
	
	<bean id="expressionsReader" class="br.usp.ime.escience.expressmatch.expression.evaluate.batch.reader.ExpressionsReader">
	</bean>
	
	<bean id="expressionsProcessor" class="br.usp.ime.escience.expressmatch.expression.evaluate.batch.processor.ExpressionsProcessor">
	</bean>
	
	<bean id="expressionsWriter" class="br.usp.ime.escience.expressmatch.expression.evaluate.batch.writer.ExpressionsWriter">
	</bean>
	
		
	<!-- JOB: Step 2 (expressionsNotification) Beans -->
		
	<bean id="expressionsNotificationSender" class="br.usp.ime.escience.expressmatch.expression.evaluate.batch.notification.NotificationSender">
	</bean>
	
	<!-- Task Scheduler Runner -->
	<bean id="taskSchedulerRunner" class="br.usp.ime.escience.expressmatch.batch.TaskSchedulerRunner" />
 
	<!-- Run every 4 days -->
	<task:scheduled-tasks>
		<task:scheduled ref="taskSchedulerRunner" method="run" fixed-delay="5000" />
	</task:scheduled-tasks>
		
</beans>
